name: wheels
concurrency:
  group: ${{ github.workflow }}-${{ github.event.number }}-${{ github.event.ref }}
  cancel-in-progress: true
on:  # yamllint disable-line rule:truthy
  pull_request:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    name: build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-latest]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: false  # Avoid default submodule update

      - name: Clean Old Submodule Cache
        run: |
          # Force remove any lingering references to 'liblsl' in submodule cache
          git submodule deinit -f -- liblsl || true
          rm -rf .git/modules/liblsl || true
          rm -rf liblsl || true

          # Remove any existing 'liblsl' entry in .git/config if it exists
          sed -i '/submodule "liblsl"/,+2d' .git/config || true
      - name: Sync and Initialize Submodules
        run: |
          git submodule sync --recursive
          git submodule update --init --recursive --depth=1

      # For some reason doing this in pyproject.toml does not seem to work :(
      - name: Set Windows compilation env vars
        shell: bash
        run: |
          set -exo pipefail
          echo "INCLUDE=$GITHUB_WORKSPACE\\liblsl\\include" | tee -a $GITHUB_ENV
          echo "LIB=$GITHUB_WORKSPACE\\liblsl\\build\\Release" | tee -a $GITHUB_ENV
          echo "ADD_PATH=$(cygpath -w $GITHUB_WORKSPACE)\\liblsl\\build\\Release" | tee -a $GITHUB_ENV
        if: runner.os == 'Windows'
      - uses: pypa/cibuildwheel@v2.21.3
      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  test:
    name: test wheels on ${{ matrix.os }} - py${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    needs: build
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-latest]
        python: ["3.10", "3.13"]
        exclude:
          - os: macos-13
            python: "3.13"
    defaults:
      run:
        shell: bash
    steps:
      - run: sudo apt update && sudo apt install -y binutils libpugixml-dev qtbase5-dev qt5-qmake
        if: runner.os == 'Linux'
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      - uses: actions/download-artifact@v4
        with:
          pattern: cibw-wheels-${{ matrix.os }}-*
          merge-multiple: true
          path: dist
      - run: ls -alt . && ls -alt dist/
      - run: pip install --only-binary mne-lsl mne-lsl[test] --find-links dist --pre
      - run: mne-lsl sys-info --developer
      - uses: ./.github/actions/get-testing-dataset
      - name: Run pytest
        uses: ./.github/actions/retry-step
        with:
          command: pytest tests/ --cov=mne_lsl --cov-report=xml --cov-config=pyproject.toml -s
          retry_error_codes: "3,134,139"
        env:
          MNE_LSL_LOG_LEVEL: DEBUG
      - uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
